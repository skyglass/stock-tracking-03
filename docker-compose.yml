version: "3.8"

networks:
  stock:
    driver: bridge

services:
  
  # Backing Services

  order-postgres:
    image: debezium/postgres:15
    container_name: order-db
    hostname: order-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: order-db
      PGPORT: 5433
    volumes:
      - ./volumes/postgresql/order-postgres:/var/lib/postgresql/data
    ports:
      - 5433:5433
    networks:
      - stock

  product-postgres:
    image: debezium/postgres:15
    container_name: product-db
    hostname: product-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: product-db
      PGPORT: 5434
    volumes:
      - ./volumes/postgresql/product-postgres:/var/lib/postgresql/data
    ports:
      - 5434:5434
    networks:
      - stock

  gateway-redis:
    image: "redis:7.0"
    container_name: "gateway-redis"
    ports:
      - 6379:6379
    networks:
      - stock

  keycloak-postgres:
    image: postgres:15.3
    container_name: keycloak_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: "pg_isready -U keycloak"
    networks:
      - stock
  
  stock-keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    container_name: stock-keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL_HOST=keycloak-postgres
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_DB_PORT=5432
      - KC_HEALTH_ENABLED=true
    ports:
      - "8080:8080"
    command: start-dev
    depends_on:
      - keycloak-postgres
    healthcheck:
      test: "curl -f http://book-keycloak:8080/health/ready || exit 1"
    networks:
      - stock


  zipkin:
    image: openzipkin/zipkin:2.24.3
    container_name: zipkin
    restart: unless-stopped
    ports:
      - "9411:9411"
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9411" ]
    networks:
      - stock

  stock-zookeeper:
    image: debezium/zookeeper:2.2
    container_name: stock-zookeeper
    restart: always
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    environment:
      JMXPORT: 9010
      JMXHOST: stock-zookeeper
    volumes:
      - ./volumes/zookeeper/data:/zookeeper/data
      - ./volumes/zookeeper/txns:/zookeeper/txns
      - ./volumes/zookeeper/log:/zookeeper/logs
      - ./volumes/zookeeper/conf:/zookeeper/conf
    networks:
      - stock

  stock-kafka1:
    image: debezium/kafka:2.2
    container_name: stock-kafka1
    restart: always
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      ZOOKEEPER_CONNECT: "stock-zookeeper:2181"
      BOOTSTRAP_SERVERS: "stock-kafka1:29092,stock-kafka2:29093"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://stock-kafka1:29092,PLAINTEXT_HOST://localhost:9092
      BROKER_ID: 1
      ADVERTISED_HOST_NAME: stock-kafka1
      JMXPORT: 9011
      JMXHOST: stock-kafka1
    depends_on:
      - stock-zookeeper
    volumes:
      - ./volumes/kafka/kafka-1/data:/kafka/data
      - ./volumes/kafka/kafka-1/log:/kafka/log
      - ./volumes/kafka/kafka-1/config:/kafka/config
    networks:
      - stock

  stock-kafka2:
    image: debezium/kafka:2.2
    container_name: stock-kafka2
    restart: always
    ports:
      - 9093:9093
      - 29093:29093
    environment:
      ZOOKEEPER_CONNECT: "stock-zookeeper:2181"
      BOOTSTRAP_SERVERS: "stock-kafka1:29092,stock-kafka2:29093"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29093,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://stock-kafka2:29093,PLAINTEXT_HOST://localhost:9093
      BROKER_ID: 2
      ADVERTISED_HOST_NAME: stock-kafka2
      JMXPORT: 9011
      JMXHOST: stock-kafka2
    depends_on:
      - stock-zookeeper
    volumes:
      - ./volumes/kafka/kafka-2/data:/kafka/data
      - ./volumes/kafka/kafka-2/log:/kafka/log
      - ./volumes/kafka/kafka-2/config:/kafka/config
    networks:
      - stock

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8070:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "stock-kafka1:29092,stock-kafka2:29093"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "stock-zookeeper:2181"
      KAFKA_CLUSTERS_0_METRICS_PORT: 9011
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: stock-connect
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://stock-connect:8083
    networks:
      - stock

  stock-connect:
    image: debezium/connect:2.2
    container_name: stock-connect
    restart: always
    ports:
      - 8071:8083
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      BOOTSTRAP_SERVERS: "stock-kafka1:29092,stock-kafka2:29093"
      JMXPORT: 9012
      JMXHOST: stock-connect
    depends_on:
      - stock-kafka1
      - stock-kafka2
    networks:
      - stock